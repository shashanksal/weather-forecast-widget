[{"/Users/shashanksalunkhe.iti/Desktop/Self_Projects/weather-forecast-widget/src/index.tsx":"1","/Users/shashanksalunkhe.iti/Desktop/Self_Projects/weather-forecast-widget/src/reportWebVitals.ts":"2","/Users/shashanksalunkhe.iti/Desktop/Self_Projects/weather-forecast-widget/src/components/App/App.tsx":"3","/Users/shashanksalunkhe.iti/Desktop/Self_Projects/weather-forecast-widget/src/components/Header/index.ts":"4","/Users/shashanksalunkhe.iti/Desktop/Self_Projects/weather-forecast-widget/src/components/Header/AppHeader.tsx":"5","/Users/shashanksalunkhe.iti/Desktop/Self_Projects/weather-forecast-widget/src/components/MainBody/index.ts":"6","/Users/shashanksalunkhe.iti/Desktop/Self_Projects/weather-forecast-widget/src/components/MainBody/MainBody.tsx":"7","/Users/shashanksalunkhe.iti/Desktop/Self_Projects/weather-forecast-widget/src/components/LocationForm/index.ts":"8","/Users/shashanksalunkhe.iti/Desktop/Self_Projects/weather-forecast-widget/src/components/LocationForm/LocationForm.tsx":"9","/Users/shashanksalunkhe.iti/Desktop/Self_Projects/weather-forecast-widget/src/utils/constants.ts":"10","/Users/shashanksalunkhe.iti/Desktop/Self_Projects/weather-forecast-widget/src/controller/requestController.js":"11","/Users/shashanksalunkhe.iti/Desktop/Self_Projects/weather-forecast-widget/src/store/index.ts":"12","/Users/shashanksalunkhe.iti/Desktop/Self_Projects/weather-forecast-widget/src/store/store.ts":"13","/Users/shashanksalunkhe.iti/Desktop/Self_Projects/weather-forecast-widget/src/store/reducer.ts":"14","/Users/shashanksalunkhe.iti/Desktop/Self_Projects/weather-forecast-widget/src/store/actionTypes.ts":"15","/Users/shashanksalunkhe.iti/Desktop/Self_Projects/weather-forecast-widget/src/utils/City.ts":"16","/Users/shashanksalunkhe.iti/Desktop/Self_Projects/weather-forecast-widget/src/utils/ICity.ts":"17","/Users/shashanksalunkhe.iti/Desktop/Self_Projects/weather-forecast-widget/src/controller/customCalls.js":"18","/Users/shashanksalunkhe.iti/Desktop/Self_Projects/weather-forecast-widget/src/store/actions.ts":"19","/Users/shashanksalunkhe.iti/Desktop/Self_Projects/weather-forecast-widget/src/components/WeatherWidget/index.ts":"20","/Users/shashanksalunkhe.iti/Desktop/Self_Projects/weather-forecast-widget/src/components/WeatherWidget/WeatherWidget.tsx":"21","/Users/shashanksalunkhe.iti/Desktop/Self_Projects/weather-forecast-widget/src/components/WeatherCard/index.ts":"22","/Users/shashanksalunkhe.iti/Desktop/Self_Projects/weather-forecast-widget/src/components/WeatherCard/WeatherCard.tsx":"23","/Users/shashanksalunkhe.iti/Desktop/Self_Projects/weather-forecast-widget/src/components/SpinnerComponent/index.ts":"24","/Users/shashanksalunkhe.iti/Desktop/Self_Projects/weather-forecast-widget/src/components/SpinnerComponent/Spinner.tsx":"25"},{"size":670,"mtime":1607422229953,"results":"26","hashOfConfig":"27"},{"size":425,"mtime":1607344849841,"results":"28","hashOfConfig":"27"},{"size":469,"mtime":1607500168745,"results":"29","hashOfConfig":"27"},{"size":38,"mtime":1607344849829,"results":"30","hashOfConfig":"27"},{"size":761,"mtime":1607500182961,"results":"31","hashOfConfig":"27"},{"size":37,"mtime":1607344849832,"results":"32","hashOfConfig":"27"},{"size":1637,"mtime":1607416811584,"results":"33","hashOfConfig":"27"},{"size":41,"mtime":1607344849831,"results":"34","hashOfConfig":"27"},{"size":3784,"mtime":1608889591552,"results":"35","hashOfConfig":"27"},{"size":512,"mtime":1608889562979,"results":"36","hashOfConfig":"27"},{"size":2032,"mtime":1608879984312,"results":"37","hashOfConfig":"27"},{"size":34,"mtime":1607344849844,"results":"38","hashOfConfig":"27"},{"size":264,"mtime":1607344849846,"results":"39","hashOfConfig":"27"},{"size":535,"mtime":1607344849845,"results":"40","hashOfConfig":"27"},{"size":117,"mtime":1607344849842,"results":"41","hashOfConfig":"27"},{"size":679,"mtime":1607344849848,"results":"42","hashOfConfig":"27"},{"size":113,"mtime":1607252309569,"results":"43","hashOfConfig":"44"},{"size":1506,"mtime":1607651339104,"results":"45","hashOfConfig":"27"},{"size":224,"mtime":1607344849843,"results":"46","hashOfConfig":"27"},{"size":42,"mtime":1607344849836,"results":"47","hashOfConfig":"27"},{"size":1256,"mtime":1607344849836,"results":"48","hashOfConfig":"27"},{"size":40,"mtime":1607344849834,"results":"49","hashOfConfig":"27"},{"size":2712,"mtime":1607500553723,"results":"50","hashOfConfig":"27"},{"size":26,"mtime":1607406397743,"results":"51","hashOfConfig":"27"},{"size":680,"mtime":1607500253048,"results":"52","hashOfConfig":"27"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},"1i8qy8k",{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"55"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"78"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},"hfl2vu",{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},"/Users/shashanksalunkhe.iti/Desktop/Self_Projects/weather-forecast-widget/src/index.tsx",[],["109","110"],"/Users/shashanksalunkhe.iti/Desktop/Self_Projects/weather-forecast-widget/src/reportWebVitals.ts",[],"/Users/shashanksalunkhe.iti/Desktop/Self_Projects/weather-forecast-widget/src/components/App/App.tsx",[],"/Users/shashanksalunkhe.iti/Desktop/Self_Projects/weather-forecast-widget/src/components/Header/index.ts",[],"/Users/shashanksalunkhe.iti/Desktop/Self_Projects/weather-forecast-widget/src/components/Header/AppHeader.tsx",[],"/Users/shashanksalunkhe.iti/Desktop/Self_Projects/weather-forecast-widget/src/components/MainBody/index.ts",[],"/Users/shashanksalunkhe.iti/Desktop/Self_Projects/weather-forecast-widget/src/components/MainBody/MainBody.tsx",[],"/Users/shashanksalunkhe.iti/Desktop/Self_Projects/weather-forecast-widget/src/components/LocationForm/index.ts",[],"/Users/shashanksalunkhe.iti/Desktop/Self_Projects/weather-forecast-widget/src/components/LocationForm/LocationForm.tsx",["111","112"],"import React, { useEffect } from 'react';\nimport { trackPromise } from 'react-promise-tracker';\nimport {  useDispatch } from 'react-redux'\n\n//Material UI Components\nimport {\n    TextField,\n    Button\n} from '@material-ui/core';\n\nimport customCalls from '../../controller/customCalls'\n\n//import { WEATHER_SEARCH_URL, WOEID_SEARCH_URL ,  } from '../../utils/constants';\nimport { METAWEATHER_CITY, METAWEATHER_WOEID ,  } from '../../utils/constants';\nimport { storeWeatherData } from '../../store/actions';\nimport City from '../../utils/City';\n\n//const customCalls = require('../../controller/customCalls');\n\nconst styles = {\n    alignItemsAndJustifyContent: {\n        width: 600,\n        height: 150,\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        backgroundColor: 'gold',\n        border: '2px solid #FFF',\n        borderRadius: '4px'\n    },\n    textField: {\n        width: 400,\n        margin: 8\n    }\n}\n\nconst LocationForm = () => {\n    const dispatch = useDispatch();\n    const [location, setLocation] = React.useState<string>('');\n\tconst [dialogueOpen, setDialogueOpen] = React.useState<boolean>(false);\n    useEffect(() => {\n        // Check if Browser supports Geolocation API.\n        // If true, proceed\n        // else throw/print not available\n        if (\"geolocation\" in navigator) {\n            navigator.geolocation.getCurrentPosition(function (position) {\n                console.log(\"Latitude is :\", position.coords.latitude);\n                console.log(\"Longitude is :\", position.coords.longitude);\n            });\n        } else {\n            console.log(\"Not Available\");\n        }\n    }, []);\n\n    const handleSubmit = (event: any) => {\n        event.preventDefault();\n        //const searchUrl = `${WEATHER_SEARCH_URL}` + location;\n\t\tconst searchUrl = `${METAWEATHER_CITY}` + location;\n        trackPromise(customCalls.makeCityFetchCall(searchUrl, \"GET\", \"\")\n            .then(res => {\n                console.log(res);\n                if (res && typeof res.response !== 'undefined' && !res.error) {\n                    let searchResponse = res.response;\n                    let city = new City(searchResponse);\n                    return city.woeid;\n                }\n                else {\n                    console.log(\"City name not valid\");\n                    alert(\"City name not valid\");\n                }\n            })\n            .then(woeid => {\n                if (woeid) {\n\t\t\t\t\t//const woeidUrl = `${WOEID_SEARCH_URL}` + woeid;\n\t\t\t\t\tconst woeidUrl = `${METAWEATHER_WOEID}` + woeid;\n                    customCalls.makeWeatherCalls(woeidUrl, \"GET\", \"\")\n                        .then(res => {\n                            dispatch(storeWeatherData(res.response));\n                        })\n                }\n            })\n        )\n    }\n\n    const handleChange = (event: any) => {\n        setLocation(event.target.value)\n    }\n\n    return (\n        <div style={styles.alignItemsAndJustifyContent}>\n            <form className=\"weather-form\" noValidate autoComplete=\"off\" onSubmit={handleSubmit}>\n                <TextField\n                    id=\"standard-full-width\"\n                    label=\"Location\"\n                    style={styles.textField}\n                    placeholder=\"Enter Location\"\n                    fullWidth\n                    margin=\"normal\"\n                    InputLabelProps={{\n                        shrink: true,\n                    }}\n                    value={location}\n                    onChange={handleChange}\n                />\n                <Button variant=\"contained\" color=\"primary\" className=\"submit-btn\" onClick={handleSubmit}>\n                    SEARCH\n                </Button>\n            </form>\n        </div>\n    )\n}\n\nexport default LocationForm;\n","/Users/shashanksalunkhe.iti/Desktop/Self_Projects/weather-forecast-widget/src/utils/constants.ts",[],"/Users/shashanksalunkhe.iti/Desktop/Self_Projects/weather-forecast-widget/src/controller/requestController.js",["113"],"/**\n * Create  request and make Fetch Call\n * @param url {string} HTTP url for making request\n * @param method {string} HTTP request type GET | POST | PUT | DELETE\n * @param data {Object} body param object for POST request\n */\nconst makeRequest = async (url, method, data) => {\n\t//AbortController for Timeout fetch request safely\n\tconst controller = new AbortController();\n\tconst params = createParams(method, data);\n\tconst config = { ...params, signal: controller.signal };\n\n\tconst timeOut = setTimeout(() => {\n\t\tcontroller.abort();\n\t}, 20000);\n\n\treturn makeFetchCall(url, config)\n\t\t.then((res) => {\n\t\t\treturn res;\n\t\t})\n\t\t.catch((err) => {\n\t\t\tif (err.name === 'AbortError') {\n\t\t\t\treturn {\n\t\t\t\t\terror: true,\n\t\t\t\t\tresponse: {\n\t\t\t\t\t\tMessage: err,\n\t\t\t\t\t},\n\t\t\t\t};\n\t\t\t}\n\t\t});\n};\n\n/**\n * Create header params\n * @param method {string} HTTP request type GET | POST | PUT | DELETE\n * @param data {Object} body param object for POST request\n */\nconst createParams = async (method, data) => {\n\tlet params = Object.create({\n\t\tmethod: method,\n\t\theaders: {\n\t\t\t'Content-Type': 'applcation/json',\n\t\t\t'Access-Controll-Allow-Origin': '*',\n\t\t},\n\t\tbody: '',\n\t});\n\t//Stringify data only if data present -> eg. POST request\n\tif (data) params.body = JSON.stringify(data);\n\telse delete params.body;\n\n\treturn params;\n};\n\n/**\n * Make call using Fetch API\n * @param url {string} HTTP url for making request\n * @param config Config object\n */\nconst makeFetchCall = async (url, config) => {\n\tlet obj = {\n\t\terror: false,\n\t\tresponse: Object,\n\t};\n\ttry {\n\t\tconst request = await fetch(url, config);\n\t\tconsole.log(request);\n\t\tif (typeof request !== 'undefined' && request.status === 200) {\n\t\t\tconst response = await request.json();\n\t\t\t//TODO - implement Interface to assign response value\n\t\t\tobj.response = response;\n\t\t} else {\n\t\t\tobj.error = true;\n\t\t\tobj.response = {};\n\t\t}\n\t} catch (err) {\n\t\tobj.error = true;\n\t\tobj.response = err;\n\t}\n\treturn obj;\n};\n\nconst requestController = {\n\tmakeRequest,\n\tcreateParams,\n\tmakeFetchCall,\n};\n\nexport default requestController;\n",["114","115"],"/Users/shashanksalunkhe.iti/Desktop/Self_Projects/weather-forecast-widget/src/store/index.ts",[],"/Users/shashanksalunkhe.iti/Desktop/Self_Projects/weather-forecast-widget/src/store/store.ts",[],"/Users/shashanksalunkhe.iti/Desktop/Self_Projects/weather-forecast-widget/src/store/reducer.ts",[],"/Users/shashanksalunkhe.iti/Desktop/Self_Projects/weather-forecast-widget/src/store/actionTypes.ts",[],"/Users/shashanksalunkhe.iti/Desktop/Self_Projects/weather-forecast-widget/src/utils/City.ts",[],"/Users/shashanksalunkhe.iti/Desktop/Self_Projects/weather-forecast-widget/src/utils/ICity.ts",[],["116","117"],"/Users/shashanksalunkhe.iti/Desktop/Self_Projects/weather-forecast-widget/src/controller/customCalls.js",[],"/Users/shashanksalunkhe.iti/Desktop/Self_Projects/weather-forecast-widget/src/store/actions.ts",[],"/Users/shashanksalunkhe.iti/Desktop/Self_Projects/weather-forecast-widget/src/components/WeatherWidget/index.ts",[],"/Users/shashanksalunkhe.iti/Desktop/Self_Projects/weather-forecast-widget/src/components/WeatherWidget/WeatherWidget.tsx",[],"/Users/shashanksalunkhe.iti/Desktop/Self_Projects/weather-forecast-widget/src/components/WeatherCard/index.ts",[],"/Users/shashanksalunkhe.iti/Desktop/Self_Projects/weather-forecast-widget/src/components/WeatherCard/WeatherCard.tsx",[],["118","119"],"/Users/shashanksalunkhe.iti/Desktop/Self_Projects/weather-forecast-widget/src/components/SpinnerComponent/index.ts",[],"/Users/shashanksalunkhe.iti/Desktop/Self_Projects/weather-forecast-widget/src/components/SpinnerComponent/Spinner.tsx",[],{"ruleId":"120","replacedBy":"121"},{"ruleId":"122","replacedBy":"123"},{"ruleId":"124","severity":1,"message":"125","line":40,"column":9,"nodeType":"126","messageId":"127","endLine":40,"endColumn":21},{"ruleId":"124","severity":1,"message":"128","line":40,"column":23,"nodeType":"126","messageId":"127","endLine":40,"endColumn":38},{"ruleId":"129","severity":1,"message":"130","line":13,"column":8,"nodeType":"126","messageId":"127","endLine":13,"endColumn":15},{"ruleId":"120","replacedBy":"121"},{"ruleId":"122","replacedBy":"123"},{"ruleId":"120","replacedBy":"131"},{"ruleId":"122","replacedBy":"132"},{"ruleId":"120","replacedBy":"133"},{"ruleId":"122","replacedBy":"134"},"no-native-reassign",["135"],"no-negated-in-lhs",["136"],"@typescript-eslint/no-unused-vars","'dialogueOpen' is assigned a value but never used.","Identifier","unusedVar","'setDialogueOpen' is assigned a value but never used.","no-unused-vars","'timeOut' is assigned a value but never used.",["135"],["136"],["135"],["136"],"no-global-assign","no-unsafe-negation"]